program proyecto;
uses crt;
label 1;
//DECLARACION DE LAS CONSTANTES/////////////////////////////////////////////
const
max=100;
///////////////////////////////////////////////////////////////////////////


//DECLARACIÓN DE TIPOS DE DATOS////////////////////////////////////////////
type
matriz = array [1..max,1..max] of integer;

vecbool = array [1..max] of boolean;
//////////////////////////////////////////////////////////////////////////


//DECLARACIÓN DE VARIABLES GLOBALES///////////////////////////////////////
var
mat,mano1,mano2,mano3,mano4,pote,mesa,aux:matriz;
check:vecbool;
opcion,num_mano1,num_mano2,num_mano3,num_mano4,n_jugadores,f7_14,cochina,humano,k,num_mesa,posicion_cochina,num_pote,lim_i,lim_d,tranca:integer;
juego,salir,juega3,juega4,juegapote,primera:boolean;
nombre_jugador:string;
{gestor:vector;}
//////////////////////////////////////////////////////////////////////////


////////////////////////SUBPROGRAMAS/////////////////////////////////////

//CREAR X NUMERO DE ESPACIOS EN BLANCO ANTES DE IMPRIMIR//////////////////
procedure espaciado (a:integer);
var
   i:integer;
begin
     for i:=1 to a do
     begin
          write (' ');
     end;
end;
//CREAR X NUMERO DE LINEAS EN BLANCO//////////////////////////////////////
procedure vacio (a:integer);
var
   i:integer;
begin
     for i:=1 to a do
     begin
          writeln ('');
     end;
end;
//CREAR UN LINEA DIVISORIA///////////////////////////////////////////////
procedure linea;
var
   i:integer;
begin
     for i:=1 to 80 do
     begin
          write('*');
     end;
     vacio(1);
end;
//PROCEDIMIENTO PARA VER LOS CREDITOS DEL PROGRAMA///////////////////////
procedure creditos;
begin
             clrscr;
             vacio(1);
             espaciado (3);writeln ('Programa elaborado por:');
             vacio(1);
             espaciado (3);writeln ('Arnaldo Cisneros');
             espaciado (3);writeln ('Miguel Jimenez');
             vacio(1);
             espaciado (3);writeln ('Presione cualquier tecla para volver al menu principal');
             readln;
end;
//PROCEDIMIENTO PARA CREAR LAS FICHAS EN LA MATRIZ 'MAT'/////////////////
procedure crear_fichas(var mat:matriz);
          var
          i,j,x,y:integer;
           begin
           j:=1; x:=0;
            for i:=1 to 2 do begin
             if (i=1) then begin
             while (j <= 28) do begin
               if (j >= 1) and (j <= 7) then
               mat[i,j]:=0;
               if (j >= 8) and (j <= 13) then
               mat[i,j]:=1;
               if (j >= 14) and (j <= 18) then
               mat[i,j]:=2;
               if (j >= 19) and (j <=22) then
               mat[i,j]:=3;
               if (j >= 23) and (j <= 25) then
               mat[i,j]:=4;
               if (j >= 26) and (j <= 27) then
               mat[i,j]:=5;
               if (j = 28) then
               mat[i,j]:=6;
               j:=j+1;
               end; end; //end del while y del if ndel numerador
               if (i=2) then begin
                 j:=1;
                 while (j <= 28) do begin
                 y:=x;
                  while (y <= 6) do begin
                  mat[i,j]:=y;
                  y:=y+1;
                  j:=j+1;
                  end; //end del while2
                 x:=x+1;
                 end; //end del while1
               end; //end del if i=2
              end; //end del for 1=2
           end;
//PROCEDIMIENTO DEL VECTOR BOOLEANO DE FICHAS///////////////////////////////
procedure crear_booleano_fichas (var check:vecbool);
var
i:integer;
begin
for i:=1 to 28 do
begin
check[i]:=true;
end;
end;
//PROCEDIMIENTO PARA ASIGNAR LAS FICHAS A LAS 4 MANOS Y AL POTE/////////////////////
procedure asignar_fichas (mat:matriz; juega3,juega4,juegapote:boolean; var mano1,mano2,mano3,mano4,pote:matriz; var check:vecbool; var cochina:integer);
var
r,a,b,ranpote,rango,c,d,p,doble,z:integer;
salir:boolean;
begin
     a:=1;b:=1;c:=0;d:=0;p:=1;rango:=7; cochina:=0; doble:=28; z:=2;

     if (juega3=false) and (juega4=false) and (juegapote=false) then
     begin
     rango:=14; p:=0;
     end;
     if (juega3=false) and (juega4=false) and (juegapote=true) then
     begin
     ranpote:=14;
     end;
     if (juega3=true) and (juega4=false) and (juegapote=true) then
     begin
     c:=1; ranpote:=7;
     end;
     if (juega3=true) and (juega4=true) and (juegapote=false) then
     begin
     c:=1;d:=1;p:=0;
     end;
     ////////////////////////////////
     r:=0;
     while (p<=ranpote) and (p<>0) do
     begin
     salir:=false;
     r:=random(28);
     r:=r+1;
         if (r = doble) and (check[r]=true)  then
         begin
              repeat
              doble := doble - z;
              z:=z+1;
              if (check[doble] = false) then
                 salir:=false
              else
                 salir:=true;
              until (salir);
         end;
     if (check[r]=true) then
     begin
     pote[1,p]:=mat[1,r];
     pote[2,p]:=mat[2,r];
     p:=p+1;
     check[r]:=false;
     end;
     end;
     //////////////////////////////
     while (a<=rango) and (a<>0) do
     begin
     r:=random(28);
     r:=r+1;
         if (r = doble) and (check[r]=true)  then
         begin
         cochina:=1;
         posicion_cochina:=a;
         end;
     if (check[r]=true) then
     begin
     mano1[1,a]:=mat[1,r];
     mano1[2,a]:=mat[2,r];
     a:=a+1;
     check[r]:=false;
     end;
     end;
     //////////////////////////////
     while (b<=rango) and (b<>0) do
     begin
     r:=random(28);
     r:=r+1;
     if (r = doble) and (check[r]=true)  then
         begin
         cochina:=2;
         posicion_cochina:=b;
         end;
     if (check[r]=true) then
     begin
     mano2[1,b]:=mat[1,r];
     mano2[2,b]:=mat[2,r];
     b:=b+1;
     check[r]:=false;
     end;
     end;
     //////////////////////////////
     while (c<=rango) and (c<>0) do
     begin
     r:=random(28);
     r:=r+1;
     if (r = doble) and (check[r]=true)  then
         begin
         cochina:=3;
         posicion_cochina:=c;
         end;
     if (check[r]=true) then
     begin
     mano3[1,c]:=mat[1,r];
     mano3[2,c]:=mat[2,r];
     c:=c+1;
     check[r]:=false;
     end;
     end;
     //////////////////////////////
     while (d<=rango) and (d<>0) do
     begin
     r:=random(28);
     r:=r+1;
     if (r = doble) and (check[r]=true)  then
         begin
         cochina:=4;
         posicion_cochina:=d;
         end;
     if (check[r]=true) then
     begin
     mano4[1,d]:=mat[1,r];
     mano4[2,d]:=mat[2,r];
     d:=d+1;
     check[r]:=false;
     end;

     end;

end;
//PROCEDIMIENTO PARA IMPRIMIR UNA MANO///////////////////////////////////
procedure imprimir_mano(mano:matriz; jugador,f7_14:integer; nombre_jugador:string; ver:boolean);
          var
          i,j:integer;
           begin
            for i:=1 to 2 do begin
             espaciado (3);
             for j:=1 to f7_14 do begin
              TextBackground(15);
              TextColor(0);
              if (ver) then
                 write(' ', mano[i,j])
              else
                 write ('  ');
              TextBackground(0);
              TextColor(7);
              espaciado(1);
             end;
             TextBackground(0);
             TextColor(7);
             writeln;
            end;
           if (jugador <> 0) then
           begin
           if (jugador = 1) then
           begin
           if (nombre_jugador = '') then
           begin
                espaciado (3);writeln ('Tus fichas');
           end
             else
           begin
                 espaciado (3);writeln ('Fichas de ', nombre_jugador);
           end;
           end;
           if (jugador = 2) or (jugador = 3) or (jugador = 4) then
           begin
           espaciado (3);writeln ('Fichas del jugador ', jugador, ' (Computadora)');
           end;
           if (jugador = 5) then
           begin
           espaciado (3);writeln ('Fichas en el pote');
           end;
           end;
           vacio (1);
           end;
//PROCEDIMIENTO PARA ESTRABLECER CUANTOS JUGADORES JUEGAN/////////////////
procedure establecer_jugadores (n_jugadores,f7_14:integer; var juega3,juega4,juegapote: boolean);
          begin
             if (n_jugadores=2) and (f7_14 = 7) then begin
                juega3:=false;
                juega4:=false;
                juegapote:=true;
             end;
             if (n_jugadores=2) and (f7_14 = 14) then begin
                juega3:=false;
                juega4:=false;
                juegapote:=false;
             end;
             if (n_jugadores=3) then begin
                juega3:=true;
                juega4:=false;
                juegapote:=true;
             end;
             if (n_jugadores=4) then begin
                juega3:=true;
                juega4:=true;
                juegapote:=false;
             end;

          end;
//LIMPIAR MATRIZ//////////////////////////////////////////////////////////
procedure limpiar (var mat:matriz);
var
i,j:integer;
begin
for i:=1 to 2 do
begin
     for j:=1 to 14 do
     begin
     mat[i,j]:=0;
     end;
end;
end;
//ERROR EN LA CREACION DE LA PARTIDA//////////////////////////////////////
procedure error;
begin
clrscr;
vacio (1);
espaciado (3);writeln ('Opcion invalida, volviendo al menu');
delay (2000);
goto 1;
end;
//CAMBIAR ORDEN DE JUGADORES//////////////////////////////////////////////
{Este procedimiento tiene la funcion de establecer como jugador 1 al jugador
con la cochina mas grande, y al resto de los jugadores en funcion de este.
Esto se hace con el objetivo de que el codigo dedicado a la partida funcione
sin importar quien es el jugador 1, 2, 3 o 4.}
procedure cambiar_orden (var aux,mano1,mano2,mano3,mano4:matriz; var humano:integer; cochina:integer; juega3,juega4:boolean);
begin
if (juega3=false) then
begin
     if (cochina=2) then
     begin
          aux:=mano1;
          mano1:=mano2;
          mano2:=aux;
          humano:=2;
     end;
end;
if (juega3=true) and (juega4=false) then
begin
     if (cochina=2) then
     begin
          aux:=mano1;
          mano1:=mano2;
          mano2:=mano3;
          mano3:=aux;
          humano:=3;
     end;
     if (cochina=3) then
     begin
          aux:=mano1;
          mano1:=mano3;
          mano3:=mano2;
          mano2:=aux;
          humano:=2;
     end;
end;
if (juega4=true) then
begin
     if (cochina=2) then
     begin
          aux:=mano1;
          mano1:=mano2;
          mano2:=mano3;
          mano3:=mano4;
          mano4:=aux;
          humano:=4;
     end;
     if (cochina=3) then
     begin
          aux:=mano1;
          mano1:=mano3;
          mano3:=aux;
          aux:=mano2;
          mano2:=mano4;
          mano4:=aux;
          humano:=3;
     end;
     if (cochina=4) then
     begin
          aux:=mano1;
          mano1:=mano4;
          mano4:=mano3;
          mano3:=mano2;
          mano2:=aux;
          humano:=2;
     end;

end;

end;
//PROCEDIMIENTO DEL TABLERO DE JUEGO////////////////////////////////////////////
procedure tablero (var mesa,mano:matriz; var num_mano,num_mesa,num_pote:integer; jugador:integer; var primera:boolean);
var
accion,pi,pd:integer;
accion_valida,izq,der:boolean;

   procedure agarrar_pote(var num_mano:integer);
   var
   r,i,j:integer;
   begin
   randomize;
   r:=random(num_pote);
   r:=r+1;

   for i:=1 to 2 do
       mano[i,num_mano+1]:=pote[i,r];

   for i:=1 to 2 do
        begin
             for j:=r to (num_pote) do
             begin
                  pote[i,j]:=pote[i,j+1];
             end;
        end;

   num_pote:=num_pote-1;
   num_mano:=num_mano+1;
   end;

   procedure imprimir_mano_jugando (mano:matriz; num_mano:integer; pote:boolean);
   var
   i,j,k:integer;
   begin
   for i:=1 to 3 do begin
             if (i < 3)then begin
             espaciado (3);
             for j:=1 to num_mano do begin
              TextBackground(15);
              TextColor(0);
              if (not pote) then
                 write(' ',mano[i,j])
              else
                 espaciado(2);
              TextBackground(0); TextColor(7);
              espaciado(1);
             end;
             TextBackground(0);
             TextColor(7);
             vacio(1);
             end;

             if (i=3) and (not pote) then begin
                espaciado (3);
                for j:=1 to num_mano do begin
                if (j < 10) then
                   k:=2;
                if (j >= 10) then
                   k:=1;
                write(j);espaciado(k);
                end;

             end;

            end;
            vacio(1);
   end;

   procedure Informaciones;
   begin
   vacio(1);
   if (num_pote > 0) then
   begin
   espaciado(3);writeln ('Fichas en el pote: ');
   vacio(1);
   imprimir_mano_jugando(pote,num_pote,true);
   end;
   if (num_pote <= 0) then
   begin
   espaciado(3);writeln('- El pote esta vacio');
   end;
   if (primera) then
   begin
        espaciado(3); writeln ('- Por ser la primera jugada, se debe jugar la cochina mas grande de la mano');
   end;
   if (not primera) then
   begin
        espaciado(3); writeln ('- Los extremos actuales del tablero son ', lim_i, ' y ', lim_d);
   end;
   end;

   procedure imprimir_mesa(mesa:matriz; num_mesa:integer);
   var
   i,j:integer;
   begin
   for i:=1 to 2 do begin
             espaciado (37-k);
             for j:=1 to num_mesa do begin
              TextBackground(15);
              TextColor(0);

              if (not primera) then
                 write(' ', mesa[i,j])
              else
                 write ('--');

              TextBackground(0); TextColor(7);
             end;
             TextBackground(0);
             TextColor(7);
             writeln;
            end;
   end;

   procedure jugar_ficha(var mano:matriz; ficha:integer; var num_mano:integer);
   var
   i,j,aux:integer;
   ID:char;
   begin

        if (jugador = humano) then
        begin
        espaciado(3); writeln ('Se Jugara la ficha numero ', ficha);
        end;

        if (primera) then
        begin
             ID:='i';
        end;

        if (not primera) then
        begin
                  if (izq) and (der) then
                  begin
                       if (jugador = humano) then
                       begin
                            repeat
                            espaciado(3); write ('Jugaras la ficha por la Izquierda o Derecha? (i/d): '); readln (ID);
                            if (ID <> 'd') and (ID <> 'i') then
                            begin
                                 espaciado(3);writeln ('Opcion invalida');
                            end;
                            until (ID = 'd') or (ID = 'i');
                       end;
                       if (jugador <> humano) then
                       begin
                            randomize;
                            i:=random(2);
                            if (i=0) then
                               ID:='i';
                            if (i=1) then
                               ID:='d';
                       end;
                  end;
                  if (izq) and (not der) then
                     ID:='i';
                  if (not izq) and (der) then
                     ID:='d';
        end;


        Case ID of
        'i': begin

             if ((mano[1,ficha] = lim_i) and (pi=2)) or ((mano[2,ficha] = lim_i) and (pi=1)) then
             begin

                  aux:=mano[1,ficha];
                  mano[1,ficha]:=mano[2,ficha];
                  mano[2,ficha]:=aux;
             end;
             for i:=1 to 2 do
             begin
                 for j:=num_mesa downto 1 do
                 begin
                    mesa[i,j+1]:=mesa[i,j];
                 if (j=1) then
                    mesa[i,j]:=mano[i,ficha];
                 end;
             end;

             if (primera) then
             begin
                  lim_i:=mano[1,ficha]; pi:=1;
                  lim_d:=mano[1,ficha]; pd:=2;
             end;
             if (not primera) then
             begin
                  if (mesa[1,1] = mesa [1,2]) then
                     begin
                     lim_i:=mesa[2,1];
                     pi:=2;
                     end;
                  if (mesa[2,1] = mesa[2,2]) then
                     begin
                     lim_i:=mesa[1,1];
                     pi:=1;
                     end;
             end;
             end;
        'd': begin

             if ((mano[1,ficha] = lim_d) and (pd=2)) or ((mano[2,ficha] = lim_d) and (pd=1)) then
             begin
                  aux:=mano[1,ficha];
                  mano[1,ficha]:=mano[2,ficha];
                  mano[2,ficha]:=aux;
             end;
             for i:=1 to 2 do
                 mesa[i,num_mesa+1]:=mano[i,ficha];
             if (mesa[1,num_mesa] = mesa[1,num_mesa+1]) then
             begin
                lim_d:=mesa[2,num_mesa+1];
                pd:=2;
             end;
             if (mesa[2,num_mesa] = mesa[2,num_mesa+1]) then
             begin
                lim_d:=mesa[1,num_mesa+1];
                pd:=1;
             end;
             end
        else
           writeln ('   Opcion invalida')
        end;

        for i:=1 to 2 do
        begin
             for j:=ficha to (num_mano) do
             begin
                  mano[i,j]:=mano[i,j+1];
             end;
        end;

           num_mano:=num_mano-1;

        if (not primera) then
        begin
           num_mesa:=num_mesa+1;
           k:=k+1;
        end;
        tranca:=0;

   end;

   procedure turno_computadora(var mano:matriz; var num_mano:integer);
   var
   valida:matriz;
   i,a,mayor,jugada:integer;
   agarra:boolean;
   begin
   if (primera) then
   begin
        jugar_ficha(mano,posicion_cochina,num_mano);

   end;
   if (not primera) then
   begin
        limpiar(valida);

        a:=1;
        agarra:=true;
        for i:=1 to num_mano do
        begin
             if (mano[1,i] = lim_i) or (mano[1,i] = lim_d) or
                (mano[2,i] = lim_i) or (mano[2,i] = lim_d) then
             begin
                  valida[1,a]:=mano[1,i];
                  valida[2,a]:=mano[2,i];
                  a:=a+1;
                  agarra:=false;

             end;
        end;
        a:=a-1;
        if (not agarra) then
        begin

             mayor:=0;
             for i:=1 to a do
             begin
                  if (valida[1,i] + valida[2,i] >= mayor) then
                  begin
                  mayor:=valida[1,i] + valida[2,i];
                  jugada:=i;
                  end;
             end;

             for i:=1 to num_mano do
             begin
                  if (mano[1,i] = valida[1,jugada]) and (mano[2,i] = valida[2,jugada]) then
                  begin
                       jugada:=i;
                  end;
             end;

             izq:=false;
             der:=false;


             if (mano[1,jugada] = lim_i) or (mano[2,jugada] = lim_i) then
             begin

                  izq:=true;
             end;
             if (mano[1,jugada] = lim_d) or (mano[2,jugada] = lim_d) then
             begin

                  der:=true;
             end;


             if (izq) or (der) then
             begin
             jugar_ficha(mano,jugada,num_mano);
             end;
        end;
        if (agarra) then
        begin

          if (num_pote > 0) then
          begin
          if (jugador = 1) then
             agarrar_pote(num_mano1);
          if (jugador = 2) then
             agarrar_pote(num_mano2);
          if (jugador = 3) then
             agarrar_pote(num_mano3);
          if (jugador = 4) then
             agarrar_pote(num_mano4);
          espaciado(3);writeln ('La computadora agarro un ficha del pote');
          end
          else
          begin
          espaciado(3);espaciado(3);writeln ('La computadora va a pasar el turno');
          tranca:=tranca+1;
          if (juega3) and (not juega4) and (tranca = 3) then
          begin
               juego:=false;
          end;
          if (not juega3) and (tranca = 2) then
          begin
               juego:=false;
          end;
          if (juega4) and (tranca = 4) then
          begin
               juego:=false;
          end;
          end;
        end;
   end;
   end;

begin
clrscr;
vacio (1);
linea;
espaciado(35); writeln('DOMINO!');
vacio(1);
espaciado(31); writeln ('Mesa del juego');
vacio(1);
linea;
imprimir_mesa(mesa,num_mesa);
vacio(1);
linea;

if (humano = jugador) then
   begin

   if (nombre_jugador <> '') then
      writeln ('   Fichas de ', nombre_jugador)
   else
      writeln ('   Tus Fichas');

   end
else
   begin
   writeln ('   Fichas del jugador ', jugador);
   end;

vacio (1);
if (jugador = humano) then
   imprimir_mano_jugando(mano,num_mano,false)
else
    imprimir_mano_jugando(mano,num_mano,true);
linea;
espaciado(25); writeln ('INFORMACIONES DE LA JUGADA');
informaciones;
vacio(1);
linea;
if (jugador = humano) then
begin
     espaciado(3); writeln ('POSIBLES ACCIONES');
     vacio(1);
     espaciado(3); writeln ('- Para jugar una ficha, presione el numero de la ficha correspondiente');
     if (num_pote > 0) then
     begin
        espaciado(3); writeln ('- Para agarrar una ficha del pote, ingrese cero (0)');
     end;
     espaciado(3); writeln ('- Para pasar el turno, ingrese menos dos (-2)');
     espaciado(3); writeln ('- Para abandonar la partida, ingrese menos uno (-1)');
     vacio(1);
     linea;
     accion_valida:=false;
     repeat

           izq:=false;der:=false;

           espaciado(3); write('Ingrese su accion: ');readln(accion);

           if (accion = -1) then
           begin
                accion_valida:=true;
           end;

           if (primera) and (accion <> posicion_cochina) then
           begin
                espaciado(3); writeln('Accion invalida, debes jugar la cochina mas grande');
           end;

           if (primera) and (accion = posicion_cochina) then
           begin
                accion_valida:=true;
           end;

           if (not primera) then
           begin
              if (accion = -2) then
              begin
                accion_valida:=true;
              end;
              if (accion = 0) and (num_pote = 0) then
              begin
                   espaciado(3);writeln('Accion invalida, el pote esta vacio');
              end;
              if (accion = 0) and (num_pote > 0) then
              begin
                   accion_valida:=true;
              end;
              if (accion > num_mano) then
              begin
                   espaciado(3);writeln('Accion invalida, tienes ', num_mano, ' fichas');
              end;
              if (accion > 0) and (accion <= num_mano) then
              begin
                   if (mano[1,accion] = lim_i) or (mano[2,accion] = lim_i) then
                   begin
                        accion_valida:=true;
                        izq:=true;
                   end;
                   if (mano[1,accion] = lim_d) or (mano[2,accion] = lim_d) then
                   begin
                        accion_valida:=true;
                        der:=true;
                   end;
                   if (mano[1,accion] <> lim_i) and (mano[2,accion] <> lim_i) and
                      (mano[1,accion] <> lim_d) and (mano[2,accion] <> lim_d) then
                   begin
                        espaciado(3); writeln('Accion invalida, esta ficha no coincide con los extremos del tablero');
                   end;

              end;
              if (accion < -2) then
              begin
                   espaciado(3);writeln('Accion invalida, opcion no permitida');
              end;
           end;

     until (accion_valida);
     if (accion = 0) then
     begin
          espaciado (3); writeln ('Agarraste del pote');
          if (humano = 1) then
             agarrar_pote(num_mano1);
          if (humano = 2) then
             agarrar_pote(num_mano2);
          if (humano = 3) then
             agarrar_pote(num_mano3);
          if (humano = 4) then
             agarrar_pote(num_mano4);
          delay(1500);
     end;
     if (accion = -1) then
     begin
          clrscr;
          vacio(1);
          linea;
          espaciado(3);writeln('Has decidido abandonar la partida, volviendo al menu principal');
          espaciado(3);writeln('Gracias por Jugar!');
          juego:=false;
     end;
     if (accion > 0) then
     begin
          jugar_ficha(mano,accion,num_mano);
     end;
     if (accion = -2) then
     begin
          tranca:=tranca+1;
          if (juega3) and (not juega4) and (tranca = 3) then
          begin
               juego:=false;
          end;
          if (not juega3) and (tranca = 2) then
          begin
               juego:=false;
          end;
          if (juega4) and (tranca = 4) then
          begin
               juego:=false;
          end;
     end;
end;
if (jugador <> humano) then
begin
     espaciado(3); writeln ('Turno de la Computadora: Jugador ', jugador);
     turno_computadora(mano,num_mano);
     delay(1500);
end;

end;

procedure victoria(jugador:integer);

procedure imprimir_mesa(mesa:matriz; num_mesa:integer);
   var
   i,j:integer;
   begin
   for i:=1 to 2 do begin
             espaciado (37-k);
             for j:=1 to num_mesa do begin
              TextBackground(15);
              TextColor(0);

              if (not primera) then
                 write(' ', mesa[i,j])
              else
                 write ('--');

              TextBackground(0); TextColor(7);
             end;
             TextBackground(0);
             TextColor(7);
             writeln;
            end;
   end;

begin
clrscr;
vacio (1);
linea;
espaciado(35); writeln('DOMINO!');
vacio(1);
espaciado(31); writeln ('Mesa del juego');
vacio(1);
linea;
imprimir_mesa(mesa,num_mesa);
vacio(1);
linea;

if (humano = jugador) then
   begin

   if (nombre_jugador <> '') then
      writeln ('   Fichas de ', nombre_jugador)
   else
      writeln ('   Tus Fichas');

   end
else
   begin
   writeln ('   Fichas del jugador ', jugador);
   end;

vacio (1);
linea;
espaciado(25); writeln ('INFORMACIONES DE LA JUGADA');
vacio(1);
linea;
end;

//////////////////////////INICIO DEL PROGRAMA PRINCIPAL///////////////////
begin
     1: //Cuando haya un error en la creacion de la partida, el juego volvera a iniciar para prevenir problemas futuros
     repeat
     //Crear procedimiento para validar todos los booleanos del check
     salir:=false;
     clrscr;
     crear_fichas (mat);
     crear_booleano_fichas (check);
     textcolor (white);
     vacio (3);
     writeln (',gggggggggggg,');
     writeln ('P"""88""""""Y8b,');
     writeln ('b,  88       `8b,');
     writeln ('`"  88        `8b                                  gg');
     writeln ('    88         Y8                                  ""');
     writeln ('    88         d8   ,ggggg,     ,ggg,,ggg,,ggg,    gg    ,ggg,,ggg,     ,ggggg');
     writeln ('    88        ,8P  dP"  "Y8ggg ,8" "8P" "8P" "8,   88   ,8" "8P" "8,   dP"  "Y');
     writeln ('    88       ,8P` i8`    ,8I   I8   8I   8I   8I   88   I8   8I   8I  i8`    ,8');
     writeln ('    88______,dP` ,d8,   ,d8`  ,dP   8I   8I   Yb,_,88,_,dP   8I   Yb,,d8,   ,d8');
     writeln ('   888888888P"   P"Y8888P"    8P`   8I   8I   `Y88P""Y88P`   8I   `Y8P"Y8888P"');
     writeln ('TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT');
     TextColor(7);
     vacio (3);
     espaciado(34);writeln ('Elija una opcion:');
     espaciado(34);writeln ('1. Jugar');
     espaciado(34);writeln ('2. Ver creditos');
     espaciado(34);writeln ('3. Salir');
     vacio (1);
     espaciado(34);write ('Opcion: '); readln (opcion);


     Case opcion of
          1: begin //Segmento de codigo para iniciar la partida
             f7_14:=7;
             juego:=true;
             primera:=true;
             num_pote:=0;
             randomize;

             ////////////////////////////ESTABLECIMIENTO DE LA PARTIDA

             limpiar (mano1);limpiar (mano2);limpiar (mano3);limpiar (mano4);limpiar (pote);limpiar(mesa);
             clrscr;
             vacio (1);
             linea;
             espaciado(3);write('Elija el numero de jugadores:'); readln (n_jugadores);
             if (n_jugadores <> 2) and (n_jugadores <> 3) and (n_jugadores <> 4) then
                error;
             f7_14:=7;
             if (n_jugadores = 2) then begin
             vacio (1);
             espaciado (3);write ('Numero de fichas por jugador (7 o 14):'); readln (f7_14);
             end;
             if (f7_14 <> 7) and (f7_14 <> 14) then
                error;
             vacio(1);
             linea;
             espaciado (3);write ('Por favor ingrese su nombre: '); readln (nombre_jugador);


             juego:=true; primera:=true; num_pote:=0;
             randomize; crear_fichas (mat);
             limpiar (mano1);limpiar (mano2);limpiar (mano3);limpiar (mano4);limpiar (pote);limpiar(mesa);
             establecer_jugadores (n_jugadores,f7_14,juega3,juega4,juegapote);             vacio(1);linea;

             espaciado (3);writeln ('Va a iniciar una partida de domino de ', n_jugadores,' Jugadores');
             espaciado (3);writeln ('Va a jugar en contra de la computadora');
             vacio (1);
             linea;
             espaciado (3);writeln ('Hola ' ,nombre_jugador, ', vamos a asignar las fichas...');
             asignar_fichas (mat,juega3,juega4,juegapote,mano1,mano2,mano3,mano4,pote,check,cochina);
             vacio (1);
             linea;
             imprimir_mano (mano1,1,f7_14,nombre_jugador,true);
             imprimir_mano (mano2,2,f7_14,'',false);
             if (n_jugadores=2) and (f7_14=7) then
             begin
             linea;
             imprimir_mano (pote,5,14,'',false);
             linea;
             num_pote:=14;
             end;
             if (n_jugadores=3) then
             begin
             imprimir_mano (mano3,3,f7_14,'',false);
             linea;
             imprimir_mano (pote,5,7,'',false);
             linea;
             num_pote:=7;
             end;
             if (n_jugadores=4) then
             begin
             imprimir_mano (mano3,3,f7_14,'',false);
             imprimir_mano (mano4,4,f7_14,'',false);
             linea;
             end;
             num_mano1:=f7_14;
             num_mano2:=f7_14;
             num_mano4:=f7_14;
             num_mano3:=f7_14;

             ////////////////////////////////////////INICIO DE LA PARTIDA

             num_mesa := 1;
             humano:=1;
             cambiar_orden (aux,mano1,mano2,mano3,mano4,humano,cochina,juega3,juega4);
             if (humano > 1) then
             begin
             espaciado (3);writeln ('Va a iniciar la Partida');
             espaciado (3);writeln ('Por tener la cochina mas grande, el jugador ', cochina, ' es el nuevo jugador 1');
             vacio(1);
             espaciado(3);writeln ('Tu eres el jugador numero ', humano);
             end;
             if (humano = 1) then
             begin
             espaciado(3); writeln ('Va a iniciar la Partida');
             espaciado(3); writeln ('Por tener la cochina mas grande, tu empiezas la parida');
             end;
             vacio(1);
             linea;
             readln ();

             k:=0;


             while (juego) do
             begin
                  if (juego) then
                     tablero(mesa,mano1,num_mano1,num_mesa,num_pote,1,primera);

                  if (num_mano1 = 0) then
                     juego:= false;

                  primera:=false;

                  if (juego) then
                     tablero(mesa,mano2,num_mano2,num_mesa,num_pote,2,primera);
                  if (num_mano2 = 0) then
                     juego:= false;

                  if (juego) then
                  begin
                  if (juega3) then
                     tablero(mesa,mano3,num_mano3,num_mesa,num_pote,3,primera);
                  end;
                  if (num_mano3 = 0) then
                     juego:= false;

                  if (juego) then
                  begin
                  if (juega4) then
                     tablero(mesa,mano4,num_mano4,num_mesa,num_pote,4,primera);
                  end;
                  if (num_mano4 = 0) then
                     juego:= false;
             end;

             vacio(1);
             linea;

             if (num_mano1 = 0) then
             begin
                  victoria(1);
                  if (humano = 1) then
                  begin
                  espaciado(3);writeln ('Felicidades, has ganado la partida!');
                  end;
                  if (humano <> 1) then
                  begin
                  espaciado(3);writeln ('Ha ganado el jugador numero 1!');
                  end;
             end;
             if (num_mano2 = 0) then
             begin
                  victoria(2);
                  if (humano = 2) then
                  begin
                  espaciado(3);writeln ('Felicidades, has ganado la partida!');
                  end;
                  if (humano <> 2) then
                  begin
                  espaciado(3);writeln ('Ha ganado el jugador numero 2!');
                  end;
             end;
             if (num_mano3 = 0) then
             begin
                  victoria(3);
                  if (humano = 3) then
                  begin
                  espaciado(3);writeln ('Felicidades, has ganado la partida!');
                  end;
                  if (humano <> 3) then
                  begin
                  espaciado(3);writeln ('Ha ganado el jugador numero 3!');
                  end;
             end;
             if (num_mano4 = 0) then
             begin
                  victoria(4);
                  if (humano = 4) then
                  begin
                  espaciado(3);writeln ('Felicidades, has ganado la partida!');
                  end;
                  if (humano <> 4) then
                  begin
                  espaciado(3);writeln ('Ha ganado el jugador numero4!');
                  end;
             end;
             if (tranca = 2) and (not juega3) then
             begin
                  espaciado(3);writeln ('Se ha trancado el juego');
             end;
             if (tranca = 3) and (juega3) and (not juega4) then
             begin
                  espaciado(3);writeln ('Se ha trancado el juego');
             end;
             if (tranca = 4) and (juega4) then
             begin
                  espaciado(3);writeln ('Se ha trancado el juego');
             end;

             readln();
             end;
          2: begin //Segmento de codigo para ver los creditos
             creditos;
             end;
          3: begin //Segmento de codigo para salir del programa
             clrscr;
             salir:=true;
             vacio (1);
             espaciado (3);writeln ('Gracias por Jugar!');
             delay (1000);
             end;
      end;

     until (salir=true);
end.
//////////////////////////FIN DEL PROGRAMA PRINCIPAL//////////////////////